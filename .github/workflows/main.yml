name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution in Release configuration
        run: dotnet build --configuration Release --no-restore

      - name: Publish GameBoyEmu project
        run: dotnet publish GameBoyEmu/GameBoyEmu.csproj --configuration Release --self-contained true --runtime win-x64 --output ./publish /p:PublishTrimmed=false /p:IncludeNativeLibrariesForSelfExtract=true
        
      - name: Copy Native Libraries
        run: |
            mkdir -p ./publish
            find ./GameBoyEmu/bin/Release/net8.0-windows -name "SDL2.dll" -exec cp {} ./publish/ \;
            find ./GameBoyEmu/bin/Release/net8.0-windows -name "*.dll" -exec cp {} ./publish/ \;
        shell: bash

      - name: Verify SDL2 DLL
        run: |
          if [ ! -f "./publish/SDL2.dll" ]; then
            echo "SDL2.dll not found in publish directory!"
            exit 1
          fi
        shell: bash

      - name: Zip published files
        run: zip -r GameBoyEmu.zip ./publish
        shell: bash

      - name: Create Release
        id: create_release
        run: |
          release_url=$(gh release create "v${{ github.run_number }}" \
            --title "Release v${{ github.run_number }}" \
            --notes "Release v${{ github.run_number }}" \
            --draft=false \
            --prerelease=false)
          echo "release_url=${release_url}" >> $GITHUB_OUTPUT
          echo "upload_url=${release_url/tag/releases/latest/assets?name=}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        run: |
          gh release upload "v${{ github.run_number }}" GameBoyEmu.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}